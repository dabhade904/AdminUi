{"ast":null,"code":"var _jsxFileName = \"/home/admin1/Desktop/gitCloneData/eBookStoreUi/src/component/bookAdd/boodAdd.jsx\";\nimport React, { Component } from \"react\";\nimport \"../bookAdd/bookAdd.css\";\n\nvar APIcall = require(\"../../congfiguration/BookStoreCallAPI\"); // var Dashboard = require('../dashboard/dashboard')\n\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      e.preventDefault();\n      let target = e.target;\n      const {\n        name\n      } = e.target;\n      let formErrors = { ...this.state.formErrors\n      };\n\n      switch (name) {\n        case 'TITLE':\n          formErrors.TITLE = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.getfile = async event => {\n      console.log(\"select--> \", event.target.files[0]);\n      this.setState({\n        FILE: event.target.files[0]\n      }); // const filePath = {\n      //   FILE_PATH: await this.state.FILE\n      // };\n\n      const formData = new FormData();\n      formData.append(\"filePath\", event.target.files[0]);\n      console.log(\"formData\", formData);\n      APIcall.getImagePath(formData).then(res => {\n        console.log(\"res in file upload--> \", res.data.url);\n        this.setState({\n          IMAGEPATH: res.data.url\n        });\n      });\n    };\n\n    this.getfilepath = () => {\n      console.log(\"in file Path\", this.state.FILE);\n    };\n\n    this.increment = async () => {\n      await this.setState(previousState => {\n        this.setState({\n          COUNT: previousState.COUNT + 1\n        });\n      });\n    };\n\n    this.decrement = async () => {\n      if (this.state.COUNT > 0) {\n        this.setState(previousState => {\n          this.setState({\n            COUNT: previousState.COUNT - 1\n          });\n        });\n      }\n    };\n\n    this.getbookdetails = () => {\n      console.log(\"call to submit\");\n      const bookDetails = {\n        TITLE: this.state.TITLE,\n        AUTHOR: this.state.AUTHOR,\n        YEAR: this.state.YEAR,\n        RATING: this.state.RATING,\n        PRICE: this.state.PRICE,\n        DESCRIPTION: this.state.DESCRIPTION,\n        IMAGEPATH: this.state.IMAGEPATH,\n        NOOFBOOKS: this.state.COUNT\n      };\n      console.log(\"book details object\", bookDetails);\n      APIcall.getBookDetails(bookDetails).then(res => {\n        console.log(\"save book in data base ---------------->\", res.data);\n      }).catch(err => {\n        console.log(\"err while submitting--> \", err);\n      });\n    };\n\n    this.getCountIncrement = () => {\n      this.setState({\n        COUNT: this.state.COUNT + 1\n      });\n    };\n\n    this.validateTitle = () => {\n      const {\n        TITLE\n      } = this.state;\n      this.setState({\n        titleErros: TITLE.length > 3 ? null : \"Name must be longer than 3 characters\"\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        TITLE,\n        AUTHOR,\n        YEAR,\n        RATING,\n        PRICE,\n        DESCRIPTION\n      } = this.state;\n      alert(`Your state values: \\n \n            titl: ${TITLE} \\n \n            author: ${AUTHOR}\\n\n            year: ${YEAR}\\n\n            rating: ${RATING}\\n\n            price: ${PRICE}\\n\n            description: ${DESCRIPTION}\\n`);\n    };\n\n    this.state = {\n      TITLE: null,\n      AUTHOR: null,\n      YEAR: null,\n      RATING: null,\n      PRICE: null,\n      DESCRIPTION: null,\n      formErrors: {\n        TITLE: \"\",\n        AUTHOR: \"\",\n        YEAR: \"\",\n        RATING: \"\",\n        PRICE: '',\n        DESCRIPTION: \"\",\n        FILE: null,\n        IMAGEPATH: \"\",\n        COUNT: 0\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (formValid(this.state)) {\n      console.log(`\n          --SUBMITTING--\n          title Name: ${this.state.TITLE}\n          Email: ${this.state.AUTHOR}\n          Password: ${this.state.YEAR}\n          contact:${this.state.RATING}\n        `);\n    } else {\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n    }\n\n    console.log(\"The form was submitted with the following data:\");\n    console.log(this.state);\n  } // gettitle = event => {\n  //   this.setState({ TITLE: event.target.value }, () => {\n  //     this.validateTitle();\n  //   });\n  // };\n  // getauthor = event => {\n  //   this.setState({ AUTHOR: event.target.value });\n  // };\n  // getyear = event => {\n  //   this.setState({ YEAR: event.target.value });\n  // };\n  // getrating = event => {\n  //   this.setState({ RATING: event.target.value });\n  // };\n  // getprice = event => {\n  //   this.setState({ PRICE: event.target.value });\n  //   console.log(this.state.PRICE);\n  // };\n  // getdescription = event => {\n  //   this.setState({ DESCRIPTION: event.target.value });\n  // };\n\n\n  render() {\n    console.log(this.state.COUNT);\n    console.log(\"file state-> \", this.state.FILE);\n    console.log(\"image response to state--> \", this.state.IMAGEPATH);\n    console.log(\"==>\", this.state.GIVEN_TITLE);\n    return React.createElement(\"div\", {\n      className: \"fullBG\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"FormCenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"FormFields\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        color: \"white\",\n        fontSize: \"large\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Book Details\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"input\", {\n      value: this.state.value,\n      onChange: this.gettitle,\n      onBlur: this.validateTitle,\n      type: \"title\",\n      className: \"FormField__Input\",\n      placeholder: \"Enter book title name\",\n      name: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Author\"), React.createElement(\"input\", {\n      value: this.state.value,\n      onChange: this.getauthor,\n      type: \"Author\",\n      className: \"FormField__Input\",\n      placeholder: \"Enter book author name\",\n      name: \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Year\"), React.createElement(\"input\", {\n      value: this.state.value,\n      onChange: this.getyear,\n      type: \"Year\",\n      className: \"FormField__Input\",\n      placeholder: \"Enter book published year\",\n      name: \"year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"input\", {\n      value: this.state.value,\n      onChange: this.getprice,\n      type: \"Price\",\n      className: \"FormField__Input\",\n      placeholder: \"Enter book price\",\n      name: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Rating\"), React.createElement(\"input\", {\n      value: this.state.value,\n      onChange: this.getrating,\n      type: \"rating\",\n      className: \"FormField__Input\",\n      placeholder: \"Rating of book\",\n      name: \"rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"FormField__Label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"input\", {\n      value: this.state.value,\n      onChange: this.getdescription,\n      type: \"Description\",\n      className: \"FormField__Input\",\n      placeholder: \"Enter book description\",\n      name: \"descrition\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      accept: \"image/*\",\n      type: \"file\",\n      name: \"filePath\",\n      value: this.state.value,\n      onChange: this.getfile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        fontSize: 10,\n        color: \"white\",\n        marginTop: -50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \" \", \"Number Of Books\"), React.createElement(\"div\", {\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: {\n        fontSize: \"medium\"\n      },\n      onClick: this.decrement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"-\"), React.createElement(\"button\", {\n      style: {\n        fontSize: \"medium\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, this.state.COUNT), React.createElement(\"button\", {\n      style: {\n        fontSize: \"medium\"\n      },\n      onClick: this.increment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"+\"))), React.createElement(\"div\", {\n      className: \"FormField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"FormField__Button mr-20\",\n      onClick: this.getbookdetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default SignUpForm;","map":{"version":3,"sources":["/home/admin1/Desktop/gitCloneData/eBookStoreUi/src/component/bookAdd/boodAdd.jsx"],"names":["React","Component","APIcall","require","SignUpForm","constructor","props","handleChange","e","preventDefault","target","name","formErrors","state","TITLE","value","length","setState","console","log","getfile","event","files","FILE","formData","FormData","append","getImagePath","then","res","data","url","IMAGEPATH","getfilepath","increment","previousState","COUNT","decrement","getbookdetails","bookDetails","AUTHOR","YEAR","RATING","PRICE","DESCRIPTION","NOOFBOOKS","getBookDetails","catch","err","getCountIncrement","validateTitle","titleErros","handleSubmit","alert","bind","formValid","error","render","GIVEN_TITLE","color","fontSize","gettitle","getauthor","getyear","getprice","getrating","getdescription","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../bookAdd/bookAdd.css\";\nvar APIcall = require(\"../../congfiguration/BookStoreCallAPI\");\n// var Dashboard = require('../dashboard/dashboard')\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      TITLE: null,\n      AUTHOR: null,\n      YEAR: null,\n      RATING:null,\n      PRICE: null,\n      DESCRIPTION: null,\n      formErrors: {\n        TITLE: \"\",\n        AUTHOR: \"\",\n        YEAR: \"\",\n        RATING: \"\",\n        PRICE: '',\n        DESCRIPTION: \"\",\n        FILE: null,\n        IMAGEPATH: \"\",\n        COUNT: 0\n      }\n    };\n    this.handleChange=this.handleChange.bind(this);\n    this.handleSubmit=this.handleSubmit.bind(this);\n  }\n\n  handleChange=e=>{\n    e.preventDefault();\n    let target=e.target;\n    const {name}=e.target;\n    let formErrors={...this.state.formErrors};\n\n    switch(name){\n      case 'TITLE':\n      formErrors.TITLE=\n      value.length<3 ? \"minimum 3 characaters required\" : \"\";\n      break;\n      default:\n        break;\n    }\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\n  }\n\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (formValid(this.state)) {\n      console.log(`\n          --SUBMITTING--\n          title Name: ${this.state.TITLE}\n          Email: ${this.state.AUTHOR}\n          Password: ${this.state.YEAR}\n          contact:${this.state.RATING}\n        `);\n    } else {\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n    }\n    console.log(\"The form was submitted with the following data:\");\n    console.log(this.state);\n  }\n\n  // gettitle = event => {\n  //   this.setState({ TITLE: event.target.value }, () => {\n  //     this.validateTitle();\n  //   });\n  // };\n  // getauthor = event => {\n  //   this.setState({ AUTHOR: event.target.value });\n  // };\n  // getyear = event => {\n  //   this.setState({ YEAR: event.target.value });\n  // };\n  // getrating = event => {\n  //   this.setState({ RATING: event.target.value });\n  // };\n  // getprice = event => {\n  //   this.setState({ PRICE: event.target.value });\n  //   console.log(this.state.PRICE);\n  // };\n  // getdescription = event => {\n  //   this.setState({ DESCRIPTION: event.target.value });\n  // };\n  getfile = async event => {\n    console.log(\"select--> \", event.target.files[0]);\n    this.setState({ FILE: event.target.files[0] });\n    // const filePath = {\n    //   FILE_PATH: await this.state.FILE\n    // };\n\n    const formData = new FormData();\n    formData.append(\"filePath\", event.target.files[0]);\n    console.log(\"formData\", formData);\n\n    APIcall.getImagePath(formData).then(res => {\n      console.log(\"res in file upload--> \", res.data.url);\n      this.setState({ IMAGEPATH: res.data.url });\n    });\n  };\n  getfilepath = () => {\n    console.log(\"in file Path\", this.state.FILE);\n  };\n  increment = async () => {\n    await this.setState(previousState => {\n      this.setState({ COUNT: previousState.COUNT + 1 });\n    });\n  };\n\n  decrement = async () => {\n    if (this.state.COUNT > 0) {\n      this.setState(previousState => {\n        this.setState({ COUNT: previousState.COUNT - 1 });\n      });\n    }\n  };\n\n  getbookdetails = () => {\n    console.log(\"call to submit\");\n\n    const bookDetails = {\n      TITLE: this.state.TITLE,\n      AUTHOR: this.state.AUTHOR,\n      YEAR: this.state.YEAR,\n      RATING: this.state.RATING,\n      PRICE: this.state.PRICE,\n      DESCRIPTION: this.state.DESCRIPTION,\n      IMAGEPATH: this.state.IMAGEPATH,\n      NOOFBOOKS: this.state.COUNT\n    };\n\n    console.log(\"book details object\", bookDetails);\n\n    APIcall.getBookDetails(bookDetails)\n      .then(res => {\n        console.log(\"save book in data base ---------------->\", res.data);\n      })\n      .catch(err => {\n        console.log(\"err while submitting--> \", err);\n      });\n  };\n  getCountIncrement = () => {\n    this.setState({\n      COUNT: this.state.COUNT + 1\n    });\n  };\n\n  validateTitle = () => {\n    const { TITLE } = this.state;\n    this.setState({\n      titleErros:\n        TITLE.length > 3 ? null : \"Name must be longer than 3 characters\"\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { TITLE, AUTHOR, YEAR, RATING, PRICE, DESCRIPTION } = this.state;\n    alert(`Your state values: \\n \n            titl: ${TITLE} \\n \n            author: ${AUTHOR}\\n\n            year: ${YEAR}\\n\n            rating: ${RATING}\\n\n            price: ${PRICE}\\n\n            description: ${DESCRIPTION}\\n`);\n  };\n  render() {\n    console.log(this.state.COUNT);\n    console.log(\"file state-> \", this.state.FILE);\n    console.log(\"image response to state--> \", this.state.IMAGEPATH);\n\n    console.log(\"==>\", this.state.GIVEN_TITLE);\n    return (\n      <div className=\"fullBG\">\n        <br></br>\n        <div className=\"FormCenter\">\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"FormFields\">\n              <h1 style={{ color: \"white\", fontSize: \"large\" }}>\n                Book Details\n              </h1>\n            </div>\n            <br></br>\n            <br></br>\n            <div className=\"FormField\">\n              <label className=\"FormField__Label\">Title</label>\n              <input\n                value={this.state.value}\n                onChange={this.gettitle}\n                onBlur={this.validateTitle}\n                type=\"title\"\n                className=\"FormField__Input\"\n                placeholder=\"Enter book title name\"\n                name=\"title\"\n              />\n            </div>\n\n            <div className=\"FormField\">\n              <label className=\"FormField__Label\">Author</label>\n              <input\n                value={this.state.value}\n                onChange={this.getauthor}\n                type=\"Author\"\n                className=\"FormField__Input\"\n                placeholder=\"Enter book author name\"\n                name=\"author\"\n              />\n            </div>\n\n            <div className=\"FormField\">\n              <label className=\"FormField__Label\">Year</label>\n              <input\n                value={this.state.value}\n                onChange={this.getyear}\n                type=\"Year\"\n                className=\"FormField__Input\"\n                placeholder=\"Enter book published year\"\n                name=\"year\"\n              />\n            </div>\n\n            <div className=\"FormField\">\n              <label className=\"FormField__Label\">Price</label>\n              <input\n                value={this.state.value}\n                onChange={this.getprice}\n                type=\"Price\"\n                className=\"FormField__Input\"\n                placeholder=\"Enter book price\"\n                name=\"price\"\n              />\n            </div>\n\n            <div className=\"FormField\">\n              <label className=\"FormField__Label\">Rating</label>\n              <input\n                value={this.state.value}\n                onChange={this.getrating}\n                type=\"rating\"\n                className=\"FormField__Input\"\n                placeholder=\"Rating of book\"\n                name=\"rating\"\n              />\n            </div>\n\n            <div className=\"FormField\">\n              <label className=\"FormField__Label\">Description</label>\n              <input\n                value={this.state.value}\n                onChange={this.getdescription}\n                type=\"Description\"\n                className=\"FormField__Input\"\n                placeholder=\"Enter book description\"\n                name=\"descrition\"\n              />\n            </div>\n            <div className=\"FormField\">\n              <input\n                accept=\"image/*\"\n                type=\"file\"\n                name=\"filePath\"\n                value={this.state.value}\n                onChange={this.getfile}\n              />\n            </div>\n          </form>\n          {/* <form\n            action=\"http://localhost:3000/FilePath\"\n            enctype=\"multipart/form-data\"\n            method=\"POST\"\n          >\n            <input type=\"file\" name=\"filePath\" accept=\"image/*\" />\n            <input type=\"submit\" value=\"Upload an Image\" />\n          </form> */}\n\n          <div className=\"FormField\">\n            <div style={{ fontSize: 10, color: \"white\", marginTop: -50 }}>\n              {\" \"}\n              Number Of Books\n            </div>\n            <div style={{ marginTop: 10 }}>\n              <button style={{ fontSize: \"medium\" }} onClick={this.decrement}>\n                -\n              </button>\n              <button style={{ fontSize: \"medium\" }}>{this.state.COUNT}</button>\n              <button style={{ fontSize: \"medium\" }} onClick={this.increment}>\n                +\n              </button>\n            </div>\n          </div>\n\n          <div className=\"FormField\">\n            <button\n              type=\"submit\"\n              className=\"FormField__Button mr-20\"\n              onClick={this.getbookdetails}\n            >\n              Submit\n            </button>\n            {/* <Dashboard count = {this.state.COUNT}/> */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SignUpForm;\n"]},"metadata":{},"sourceType":"module"}